/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type TimeIntervalWithZeroDefinition = number;
export type CpuDefinitions = BasicMetricDefinition & {
  /**
   * @maxItems 1
   */
  resources?: [] | ['*'];
  totalcpu?: boolean;
  [k: string]: unknown;
};
export type TimeIntervalDefinition = number;
export type MetricsMeasurementDefinition = (
  | string
  | {
      name?: string;
      rename?: string;
      unit?: string;
      [k: string]: unknown;
    }
)[];
export type DiskDefinitions = BasicMetricDefinition &
  BasicResourcesDefinition & {
    /**
     * @maxItems 256
     */
    ignore_file_system_types?: string[];
    drop_device?: boolean;
    [k: string]: unknown;
  };
export type DiskioDefinitions = BasicMetricDefinition & BasicResourcesDefinition;
export type NetDefinitions = BasicMetricDefinition & BasicResourcesDefinition;
/**
 * @minItems 1
 * @maxItems 255
 */
export type ProcstatDefinitions = [
  BasicMetricDefinition &
    (
      | {
          [k: string]: unknown;
        }
      | {
          [k: string]: unknown;
        }
      | {
          [k: string]: unknown;
        }
    ),
  ...(BasicMetricDefinition &
    (
      | {
          [k: string]: unknown;
        }
      | {
          [k: string]: unknown;
        }
      | {
          [k: string]: unknown;
        }
    ))[],
];
export type LogsDefinition = LogsDefinition1 & {
  logs_collected?: {
    files?: LogsFilesDefinition;
    windows_events?: LogsWindowsEventsDefinition;
  };
  metrics_collected?: {
    ecs?: {
      metrics_collection_interval?: TimeIntervalDefinition;
      /**
       * Disable the extraction of metrics from EMF logs
       */
      disable_metric_extraction?: boolean;
    };
    kubernetes?: {
      cluster_name?: string;
      metrics_collection_interval?: TimeIntervalDefinition;
      /**
       * Disable the extraction of metrics from EMF logs
       */
      disable_metric_extraction?: boolean;
      [k: string]: unknown;
    };
    prometheus?: {
      cluster_name?: string;
      log_group_name?: string;
      prometheus_config_path?: string;
      emf_processor?: EmfProcessorDefinition;
      ecs_service_discovery?: EcsServiceDiscoveryDefinition;
      /**
       * Disable the extraction of metrics from EMF logs
       */
      disable_metric_extraction?: boolean;
    };
    [k: string]: unknown;
  };
  log_stream_name?: string;
  /**
   * Max time to wait before batch publishing the log, unit is second.
   */
  force_flush_interval?: number;
  credentials?: CredentialsDefinition2;
  /**
   * The override endpoint to use to access cloudwatch logs
   */
  endpoint_override?: string;
};
export type LogsDefinition1 = {
  [k: string]: unknown;
};

/**
 * Amazon CloudWatch Agent JSON Schema
 */
export interface CloudWatchAgentConfigLinux {
  agent?: AgentDefinition;
  metrics?: MetricsDefinition;
  logs?: LogsDefinition;
  traces?: TracesDefinition;
  [k: string]: unknown;
}
/**
 * General configuration for Amazon CloudWatch Agent
 */
export interface AgentDefinition {
  /**
   * How often the metrics defined will be collected
   */
  metrics_collection_interval?: number;
  /**
   * Specifies the location to where the CloudWatch agent writes log messages. If you specify an empty string, the log goes to stdout
   */
  logfile?: string;
  /**
   * Specifies the region to use for the CloudWatch endpoint
   */
  region?: string;
  /**
   * Specifies running the CloudWatch agent with debug log messages
   */
  debug?: boolean;
  /**
   * Specifies running the CloudWatch agent with AWS SDK debug logging. Multiple options must be separated by vertical bars.
   */
  aws_sdk_log_level?: string;
  credentials?: CredentialsDefinition;
  /**
   * Hostname will be tagged by default unless you specifying append_dimensions, this flag allow you to omit hostname from tags without specifying append_dimensions
   */
  omit_hostname?: boolean;
  [k: string]: unknown;
}
/**
 * The credentials with which agent can access aws resources
 */
export interface CredentialsDefinition {
  /**
   * The target IAM role with which agent can access aws resources
   */
  role_arn?: string;
}
/**
 * configuration for metrics to be collected
 */
export interface MetricsDefinition {
  /**
   * The namespace to use for the metrics collected by the agent. The default is CWAgent
   */
  namespace?: string;
  /**
   * Specifies the dimensions on which collected metrics are to be aggregated
   *
   * @minItems 1
   * @maxItems 1024
   */
  aggregation_dimensions?: [string[], ...string[][]];
  /**
   * Adds Amazon EC2 metric dimensions to all metrics collected by the agent, we only support fixed key value pair now: ImageId:{aws:ImageId},InstanceId:{aws:InstanceId},InstanceType:{aws:InstanceType},AutoScalingGroupName:{aws:AutoScalingGroupName}.
   */
  append_dimensions?: {
    [k: string]: string;
  };
  metrics_collected: {
    collectd?: CollectdDefinitions;
    cpu?: CpuDefinitions;
    disk?: DiskDefinitions;
    diskio?: DiskioDefinitions;
    statsd?: StatsdDefinitions;
    swap?: BasicMetricDefinition;
    mem?: BasicMetricDefinition;
    net?: NetDefinitions;
    netstat?: BasicMetricDefinition;
    processes?: BasicMetricDefinition;
    procstat?: ProcstatDefinitions;
    ethtool?: EthtoolDefinitions;
    nvidia_smi?: NvidiaGpuDefinitions;
    [k: string]: BasicMetricDefinition;
  };
  /**
   * Max time to wait before batch publishing the metrics, unit is second.
   */
  force_flush_interval?: number;
  credentials?: CredentialsDefinition1;
  /**
   * The override endpoint to use to access cloudwatch
   */
  endpoint_override?: string;
}
export interface CollectdDefinitions {
  service_address?: string;
  name_prefix?: string;
  collectd_auth_file?: string;
  collectd_security_level?: 'none' | 'sign' | 'encrypt';
  /**
   * @maxItems 10
   */
  collectd_typesdb?:
    | []
    | [string]
    | [string, string]
    | [string, string, string]
    | [string, string, string, string]
    | [string, string, string, string, string]
    | [string, string, string, string, string, string]
    | [string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string]
    | [string, string, string, string, string, string, string, string, string, string];
  metrics_aggregation_interval?: TimeIntervalWithZeroDefinition;
}
export interface BasicMetricDefinition {
  metrics_collection_interval?: TimeIntervalDefinition;
  append_dimensions?: GeneralAppendDimensionsDefinition;
  measurement: MetricsMeasurementDefinition;
  [k: string]: unknown;
}
export interface GeneralAppendDimensionsDefinition {
  [k: string]: string;
}
export interface BasicResourcesDefinition {
  /**
   * @maxItems 256
   */
  resources?: string[];
  [k: string]: unknown;
}
export interface StatsdDefinitions {
  allowed_pending_messages?: number;
  service_address?: string;
  metrics_collection_interval?: TimeIntervalDefinition;
  metrics_aggregation_interval?: TimeIntervalWithZeroDefinition;
  metric_separator?: string;
}
export interface EthtoolDefinitions {
  interface_include?: string[];
  interface_exclude?: string[];
  metrics_include?: string[];
}
export interface NvidiaGpuDefinitions {
  measurement?: string[];
  [k: string]: unknown;
}
/**
 * The credentials with which agent can access aws resources
 */
export interface CredentialsDefinition1 {
  /**
   * The target IAM role with which agent can access aws resources
   */
  role_arn?: string;
}
export interface LogsFilesDefinition {
  /**
   * @minItems 1
   * @maxItems 16384
   */
  collect_list: [
    {
      file_path: string;
      log_group_name?: string;
      log_stream_name?: string;
      log_group_class?: string;
      multi_line_start_pattern?: string;
      timestamp_format?: string;
      timezone?: 'Local' | 'LOCAL' | 'UTC';
      encoding?: string;
      auto_removal?: boolean;
      blacklist?: string;
      publish_multi_logs?: boolean;
      retention_in_days?:
        | -1
        | 1
        | 3
        | 5
        | 7
        | 14
        | 30
        | 60
        | 90
        | 120
        | 150
        | 180
        | 365
        | 400
        | 545
        | 731
        | 1096
        | 1827
        | 2192
        | 2557
        | 2922
        | 3288
        | 3653;
      filters?: FilterDefinition[];
    },
    ...{
      file_path: string;
      log_group_name?: string;
      log_stream_name?: string;
      log_group_class?: string;
      multi_line_start_pattern?: string;
      timestamp_format?: string;
      timezone?: 'Local' | 'LOCAL' | 'UTC';
      encoding?: string;
      auto_removal?: boolean;
      blacklist?: string;
      publish_multi_logs?: boolean;
      retention_in_days?:
        | -1
        | 1
        | 3
        | 5
        | 7
        | 14
        | 30
        | 60
        | 90
        | 120
        | 150
        | 180
        | 365
        | 400
        | 545
        | 731
        | 1096
        | 1827
        | 2192
        | 2557
        | 2922
        | 3288
        | 3653;
      filters?: FilterDefinition[];
    }[],
  ];
}
export interface FilterDefinition {
  /**
   * Declares if the specified filter should be used to include or exclude log messages
   */
  type?: 'include' | 'exclude';
  /**
   * Regular expression to apply to the log message
   */
  expression?: string;
}
export interface LogsWindowsEventsDefinition {
  /**
   * @minItems 1
   * @maxItems 16384
   */
  collect_list: [
    {
      event_name: string;
      event_levels: ('CRITICAL' | 'ERROR' | 'WARNING' | 'INFORMATION' | 'VERBOSE')[];
      log_stream_name?: string;
      log_group_name?: string;
      log_group_class?: string;
      retention_in_days?:
        | -1
        | 1
        | 3
        | 5
        | 7
        | 14
        | 30
        | 60
        | 90
        | 120
        | 150
        | 180
        | 365
        | 400
        | 545
        | 731
        | 1096
        | 1827
        | 2192
        | 2557
        | 2922
        | 3288
        | 3653;
      event_format?: 'text' | 'xml';
    },
    ...{
      event_name: string;
      event_levels: ('CRITICAL' | 'ERROR' | 'WARNING' | 'INFORMATION' | 'VERBOSE')[];
      log_stream_name?: string;
      log_group_name?: string;
      log_group_class?: string;
      retention_in_days?:
        | -1
        | 1
        | 3
        | 5
        | 7
        | 14
        | 30
        | 60
        | 90
        | 120
        | 150
        | 180
        | 365
        | 400
        | 545
        | 731
        | 1096
        | 1827
        | 2192
        | 2557
        | 2922
        | 3288
        | 3653;
      event_format?: 'text' | 'xml';
    }[],
  ];
}
export interface EmfProcessorDefinition {
  /**
   * Enable the de-duplication function for the EMF metric
   */
  metric_declaration_dedup?: boolean;
  /**
   * The namespace to use for the Prometheus metrics collected by the agent
   */
  metric_namespace?: string;
  /**
   * The metric name, metric unit map
   */
  metric_unit?: {
    [k: string]: string;
  };
  metric_declaration?: MetricDeclarationDefinition[];
}
export interface MetricDeclarationDefinition {
  source_labels?: string[];
  label_matcher?: string;
  label_separator?: string;
  metric_selectors?: string[];
  dimensions?: string[][];
}
export interface EcsServiceDiscoveryDefinition {
  docker_label?: DockerLabel;
  task_definition_list?: TaskDefinitionList[];
  service_name_list_for_tasks?: ServiceNameListForTasks[];
  /**
   * ECS cluster region
   */
  sd_cluster_region?: string;
  /**
   * ECS service discovery frequency
   */
  sd_frequency?: string;
  /**
   * ECS service discovery result file full path
   */
  sd_result_file?: string;
  /**
   * The target ECS cluster to be scanned for Prometheus exporters
   */
  sd_target_cluster?: string;
}
export interface DockerLabel {
  /**
   * Docker label name for specifying ECS service discovery job name
   */
  sd_job_name_label?: string;
  /**
   * Docker label name for specifying the Prometheus resource path
   */
  sd_metrics_path_label?: string;
  /**
   * Docker label name for specifying the Prometheus port
   */
  sd_port_label?: string;
  [k: string]: unknown;
}
export interface TaskDefinitionList {
  /**
   * ECS container name pattern which expose the Prometheus metrics
   */
  sd_container_name_pattern?: string;
  /**
   * Service discovery result job name
   */
  sd_job_name?: string;
  /**
   * Prometheus metrics path of the exporters
   */
  sd_metrics_path?: string;
  /**
   * Prometheus metrics port list of the exporters
   */
  sd_metrics_ports?: string;
  /**
   * ECS task definition pattern which expose the Prometheus metrics
   */
  sd_task_definition_arn_pattern?: string;
  [k: string]: unknown;
}
export interface ServiceNameListForTasks {
  /**
   * ECS container name pattern which expose the Prometheus metrics
   */
  sd_container_name_pattern?: string;
  /**
   * Service discovery result job name
   */
  sd_job_name?: string;
  /**
   * Prometheus metrics path of the exporters
   */
  sd_metrics_path?: string;
  /**
   * Prometheus metrics port list of the exporters
   */
  sd_metrics_ports?: string;
  /**
   * ECS service name pattern responsible for tasks which expose the Prometheus metrics
   */
  sd_service_name_pattern?: string;
  [k: string]: unknown;
}
/**
 * The credentials with which agent can access aws resources
 */
export interface CredentialsDefinition2 {
  /**
   * The target IAM role with which agent can access aws resources
   */
  role_arn?: string;
}
export interface TracesDefinition {
  traces_collected: {
    app_signals?: {
      [k: string]: unknown;
    };
    xray?: XrayDefinition;
    otlp?: OtlpDefinition;
  };
  /**
   * Maximum number of concurrent calls to AWS X-Ray to upload documents
   */
  concurrency?: number;
  /**
   * Memory limit for traces in MB
   */
  buffer_size_mb?: number;
  /**
   * Amazon Resource Name (ARN) of the AWS resource running the agent
   */
  resource_arn?: string;
  /**
   * Disable EC2 instance metadata check
   */
  local_mode?: boolean;
  /**
   * Disable TLS certification verification
   */
  insecure?: boolean;
  credentials?: CredentialsDefinition3;
  /**
   * The override proxy address to upload segments to
   */
  proxy_override?: string;
  /**
   * The override endpoint to use to access x-ray
   */
  endpoint_override?: string;
  /**
   * The override region
   */
  region_override?: string;
}
export interface XrayDefinition {
  /**
   * UDP endpoint to use to listen for X-Ray segments
   */
  bind_address?: string;
  tcp_proxy?: TcpProxyDefinition;
}
/**
 * TCP proxy server used by the X-Ray SDK to update sampling rules
 */
export interface TcpProxyDefinition {
  /**
   * TCP endpoint for proxy server
   */
  bind_address?: string;
}
export interface OtlpDefinition {
  /**
   * gRPC endpoint to use to listen for OTLP protobuf traces
   */
  grpc_endpoint?: string;
  /**
   * HTTP endpoint to use to listen for OTLP JSON traces
   */
  http_endpoint?: string;
}
/**
 * The credentials with which agent can access aws resources
 */
export interface CredentialsDefinition3 {
  /**
   * The target IAM role with which agent can access aws resources
   */
  role_arn?: string;
}
